委托用于实现实现和回调方法。派生于System.Delegate 类
声明委托的语法如下:
delegate <return type> <delegate-name> <parameter list>
实例化委托：
public delegate void speakDe1();
void speak(){
 Console.WriteLine("我是翻译官");
}
speakDe1 de1=speak();
委托是什么？
委托是一个密封（sealed）类
并共有四个方法：Invoke,BeginInvoke,EndInvoke
父类是：System.MulticastDelegate
多潘委托：
委托对象可使用“+”运算符进行合并。
“-”运算符课从合并的委托中移除组件委托。
创建一个委托被调用时要调用的方法的调用列表。这被称为委托的 多播（multicasting），也叫组播
using System;

delegate int NumberChanger(int n);
namespace DelegateAppl
{
   class TestDelegate
   {
      static int num = 10;
      public static int AddNum(int p)
      {
         num += p;
         return num;
      }

      public static int MultNum(int q)
      {
         num *= q;
         return num;
      }
      public static int getNum()
      {
         return num;
      }

      static void Main(string[] args)
      {
         // 创建委托实例
         NumberChanger nc;
         NumberChanger nc1 = new NumberChanger(AddNum);
         NumberChanger nc2 = new NumberChanger(MultNum);
         nc = nc1;
         nc += nc2;
         // 调用多播
         nc(5);
         Console.WriteLine("Value of Num: {0}", getNum());
         Console.ReadKey();
      }
   }
}
